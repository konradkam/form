{"version":3,"sources":["js/steps.js","js/formData.js","js/validation.js","js/main.js"],"names":["resetElements","stepElements","forEach","element","classList","remove","showStep","stepNumber","add","updateNavigation","currentStep","formNavigationEl","steps","querySelectorAll","months","monthsNumbers","years","generateYears","firstYear","currentYear","Date","getFullYear","i","push","reverse","message","name","prefix","number","chess","date","day","month","year","age","default","validateStep","step","valid","nameEl","prefixEl","numberEl","chessEl","dateEl","el","document","warning","querySelector","value","length","showWarning","validatePrefix","validatePhoneNumber","RegExp","string","test","isNumber","validateChess","radios","isChecked","radio","checked","validateDate","dayEl","monthEl","yearEl","validateDay","chosenMonth","getMonth","chosenYear","days","daysInMonth","monthNumber","formData","getDate","validateMonth","validateYear","fullDate","createDate","console","log","validateAge","diff","now","getTime","ageDate","Math","abs","getUTCFullYear","messageEl","createElement","textContent","style","left","calculateOffset","parent","closest","elOffset","getBoundingClientRect","parentOffset","floor","insertAdjacentElement","init","formButtonEl","monthsEl","yearsEl","monthsFragment","yearsFragment","numberOfSteps","createSelectFragment","array","selectFragment","createDocumentFragment","optionEl","appendChild","handleFormButton","validation","updateStep","updateButton","handleNavigationClick","e","target","hasAttribute","parseInt","dataset","addEventListener"],"mappings":"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","file":"main.793ab0ea.js","sourceRoot":"..","sourcesContent":["export default (() => {\n    function resetElements(stepElements) {\n        stepElements.forEach(element => {\n            element.classList.remove('active');\n        });\n    }\n\n    return {\n        showStep: (stepNumber, stepElements) => {\n            resetElements(stepElements);\n            stepElements[stepNumber - 1].classList.add('active');\n        },\n        updateNavigation: (currentStep, formNavigationEl) => {\n            const steps = [...formNavigationEl.querySelectorAll('[data-target]')];\n\n            resetElements(steps);\n            steps[currentStep - 1].classList.add('active');\n        }\n    };\n})();","export default (() => {\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    const monthsNumbers = {\n        'January' : 1,\n        'February' : 2,\n        'March' : 3,\n        'April' : 4,\n        'May' : 5,\n        'June' : 6,\n        'July' : 7,\n        'August' : 8,\n        'September' : 9,\n        'October' : 10,\n        'November' : 11,\n        'December' : 12\n    }\n\n    const years = generateYears();\n\n    function generateYears () {\n        const firstYear = 1920;\n        const currentYear = new Date().getFullYear();\n        let years = [];\n\n        for(let i = 0; i < currentYear - firstYear + 1; i++) {\n            years.push(firstYear + i);\n        }\n\n        years.reverse();\n\n        return years;\n    }\n\n    return {\n        months, monthsNumbers, years\n    }\n})();","import formData from './formData';\n\nexport default (() => {\n    const message = {\n        name: '',\n        prefix: 'Select prefix',\n        number: '',\n        chess: 'Select answer',\n        date: '',\n        day: '',\n        month: 'Select month',\n        year: 'Select year',\n        age: 'You must be at least 18 years old',\n        default: 'Invalid data'\n    }\n\n    function validateStep(step) {\n        let valid = false;\n\n        resetWarnings();\n\n        switch(step) {\n            case 1:\n                valid = true;\n                break;\n            case 2:\n                valid = validateStep2();\n                break;\n            case 3:\n                valid = true;\n                break;\n            default:\n                valid = true;\n        }\n\n        return valid;\n    }\n\n    function validateStep2() {\n        const nameEl = document.querySelector('.form__name');\n        const prefixEl = document.querySelector('.phone__prefix');\n        const numberEl = document.querySelector('.phone__number');\n        const chessEl = document.querySelector('.form__chess');\n        const dateEl = document.querySelector('.form__date');\n\n        const name = validateName(nameEl);\n        const prefix = validatePrefix(prefixEl);\n        const number = validatePhoneNumber(numberEl);\n        const chess = validateChess(chessEl);\n        const date = validateDate(dateEl);\n\n        return name && prefix && number && chess && date;\n    }\n\n    function validateName(el) {\n        if(el.value.length >= 3) return true;\n        showWarning(el, message.default);\n\n        return false;\n    }\n\n    function validatePrefix(el) {\n        if(el.value !== '') return true;\n        showWarning(el, message.prefix);\n\n        return false;\n    }\n\n    function validatePhoneNumber(el) {\n        const reg = new RegExp('^[0-9]+$');\n\n        if(el.value.length === 9 && isNumber(el.value)) return true;\n        showWarning(el, message.default);\n\n        return false;\n    }\n\n    function isNumber(string) {\n        return /^\\s*[-+]?((\\d+(\\.\\d+)?)|(\\d+\\.)|(\\.\\d+))(e[-+]?\\d+)?\\s*$/.test(string);\n    };\n\n    function validateChess(el) {\n        const radios = [...document.querySelectorAll('input[name=\"chess\"]')];\n        let isChecked = false;\n\n        radios.forEach(radio => {\n            if(radio.checked) isChecked = true;\n        });\n\n        if(isChecked) return true;\n        showWarning(el, message.chess);\n\n        return false;\n    }\n\n    function validateDate(el) {\n        const dayEl = el.querySelector('.date__day');\n        const monthEl = el.querySelector('.date__month');\n        const yearEl = el.querySelector('.date__year');\n\n        const day = validateDay(dayEl, monthEl.value, yearEl.value);\n        const month = validateMonth(monthEl);\n        const year = validateYear(yearEl);\n        const fullDate = createDate(dayEl.value, monthEl.value, yearEl.value);\n        console.log('fullDate', fullDate)\n\n        return day && month && year && validateAge(fullDate, dayEl);\n    }\n\n    function createDate(day, month, year) {\n        const monthNumber = typeof month === 'string' ? formData.monthsNumbers[month] : month;\n        const chosenMonth = monthNumber || new Date().getMonth();\n        const chosenYear = year || new Date().getFullYear();\n        const date = new Date(chosenYear, chosenMonth, day);\n        return date;\n    }\n\n    function validateAge(date, el) {\n        const diff = Date.now() - date.getTime();\n        const ageDate = new Date(diff);\n        const age = Math.abs(ageDate.getUTCFullYear() - 1970);\n\n        if(age >= 18) return true;\n\n        showWarning(el, message.age);\n\n        return false;\n    }\n\n\n    function validateDay(el, month, year) {\n        const chosenMonth = month || new Date().getMonth();\n        const chosenYear = year || new Date().getFullYear();\n        const days = daysInMonth(chosenMonth, chosenYear);\n\n        if(el.value !== '' && el.value <= days) return true;\n\n        showWarning(el, message.default);\n\n        return false;\n    }\n\n    function validateMonth(el) {\n        if(el.value !== '') return true;\n        showWarning(el, message.month);\n\n        return false;\n    }\n\n    function validateYear(el) {\n        if(el.value !== '') return true;\n        showWarning(el, message.year);\n\n        return false;\n    }\n\n    function daysInMonth (month, year) {\n        const monthNumber = typeof month === 'string' ? formData.monthsNumbers[month] : month;\n        return new Date(year, monthNumber, 0).getDate();\n    }\n\n    function showWarning(el, message) {\n        const messageEl = document.createElement('span');\n\n        messageEl.classList.add('warning');\n        messageEl.textContent = message;\n        messageEl.style.left = `${calculateOffset(el)}px`;\n\n        el.insertAdjacentElement(\"afterend\", messageEl);\n    }\n\n    function resetWarnings() {\n        const warnings = [...document.querySelectorAll('.warning')];\n\n        warnings.forEach(warning => warning.remove());\n    }\n\n    function calculateOffset(el) {\n        const parent = el.closest('.form__row');\n        const elOffset = el.getBoundingClientRect()\n        const parentOffset = parent.getBoundingClientRect();\n\n        return Math.floor(elOffset.left - parentOffset.left);\n    }\n\n    return {\n        init: step => {\n            console.log('step', step)\n            return validateStep(step);\n        }\n    }\n})();","import steps from './steps';\nimport validation from './validation';\nimport formData from './formData';\n\n(function () {\n    const formButtonEl = document.querySelector('.form-button');\n    const formNavigationEl = document.querySelector('.form__navigation');\n    const stepElements = [...document.querySelectorAll('[data-step]')];\n    const numberOfSteps = stepElements.length;\n    let currentStep = 2;\n\n    populateSelects();\n    addEventListeners();\n\n    updateStep(currentStep, stepElements);\n\n    function populateSelects() {\n        const monthsEl = document.querySelector('.date__month');\n        const yearsEl = document.querySelector('.date__year');\n        const months = formData.months;\n        const years = formData.years;\n        const monthsFragment = createSelectFragment(months);\n        const yearsFragment = createSelectFragment(years);\n\n        monthsEl.appendChild(monthsFragment);\n        yearsEl.appendChild(yearsFragment);\n    }\n\n    function createSelectFragment(array) {\n        const selectFragment = document.createDocumentFragment();\n\n        array.forEach((value) => {\n            const optionEl = document.createElement('option');\n\n            optionEl.value = value;\n            // optionEl.value = typeof value === 'string' ? value.toLowerCase() : value;\n            optionEl.textContent = value;\n\n            selectFragment.appendChild(optionEl);\n        });\n\n        return selectFragment;\n    }\n\n    function addEventListeners() {\n        formButtonEl.addEventListener('click', handleFormButton);\n        formNavigationEl.addEventListener('click', handleNavigationClick);\n    }\n\n    function handleFormButton() {\n        if(!validation.init(currentStep)) return;\n\n        if(currentStep >= numberOfSteps) {\n            console.log('submit');\n        } else {\n            currentStep++;\n            updateStep(currentStep, stepElements);\n        }\n    }\n\n    function updateStep(currentStep, stepElements) {\n        steps.showStep(currentStep, stepElements);\n        steps.updateNavigation(currentStep, formNavigationEl);\n        updateButton();\n    }\n\n    function updateButton() {\n        formButtonEl.textContent = currentStep >= numberOfSteps ? 'Submit' : 'Continue';\n    }\n\n    function handleNavigationClick(e) {\n        const target = e.target;\n\n        if(!target.hasAttribute('data-target')) return;\n\n        setCurrentStep(parseInt(target.dataset.target));\n        updateStep(currentStep, stepElements);\n    }\n\n    function setCurrentStep(step) {\n        currentStep = step;\n    }\n})();"]}