{"version":3,"sources":["js/steps.js","js/formData.js","js/validation.js","js/main.js"],"names":["resetElements","stepElements","forEach","element","classList","remove","showStep","stepNumber","add","updateNavigation","currentStep","formNavigationEl","steps","querySelectorAll","months","monthsNumbers","years","generateYears","firstYear","currentYear","Date","getFullYear","i","push","message","name","prefix","number","chess","date","day","month","year","default","validateStep","step","valid","nameEl","prefixEl","numberEl","chessEl","dateEl","el","document","warning","querySelector","value","length","showWarning","validatePrefix","validatePhoneNumber","validateChess","radios","isChecked","radio","checked","validateDate","dayEl","monthEl","yearEl","validateDay","chosenMonth","getMonth","chosenYear","days","daysInMonth","monthNumber","formData","getDate","validateMonth","validateYear","messageEl","createElement","textContent","style","left","calculateOffset","parent","closest","elOffset","getBoundingClientRect","parentOffset","Math","floor","insertAdjacentElement","init","console","log","formButtonEl","monthsEl","yearsEl","monthsFragment","yearsFragment","numberOfSteps","createSelectFragment","array","selectFragment","createDocumentFragment","optionEl","appendChild","handleFormButton","validation","updateStep","updateButton","handleNavigationClick","e","target","hasAttribute","parseInt","dataset","addEventListener"],"mappings":"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","file":"main.bbde925f.js","sourceRoot":"..","sourcesContent":["export default (() => {\n    function resetElements(stepElements) {\n        stepElements.forEach(element => {\n            element.classList.remove('active');\n        });\n    }\n\n    return {\n        showStep: (stepNumber, stepElements) => {\n            resetElements(stepElements);\n            stepElements[stepNumber - 1].classList.add('active');\n        },\n        updateNavigation: (currentStep, formNavigationEl) => {\n            const steps = [...formNavigationEl.querySelectorAll('[data-target]')];\n\n            resetElements(steps);\n            steps[currentStep - 1].classList.add('active');\n        }\n    };\n})();","export default (() => {\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    const monthsNumbers = {\n        'January' : 1,\n        'February' : 2,\n        'March' : 3,\n        'April' : 4,\n        'May' : 5,\n        'June' : 6,\n        'July' : 7,\n        'August' : 8,\n        'September' : 9,\n        'October' : 10,\n        'November' : 11,\n        'December' : 12\n    }\n\n    const years = generateYears();\n\n    function generateYears () {\n        const firstYear = 1920;\n        const currentYear = new Date().getFullYear();\n        let years = [];\n\n        for(let i = 0; i < currentYear - firstYear + 1; i++) {\n            years.push(firstYear + i);\n        }\n\n        return years;\n    }\n\n    return {\n        months, monthsNumbers, years\n    }\n})();","import formData from './formData';\n\nexport default (() => {\n    const message = {\n        name: '',\n        prefix: 'Select prefix',\n        number: '',\n        chess: 'Select answer',\n        date: '',\n        day: '',\n        month: 'Select month',\n        year: 'Select year',\n        default: 'Invalid data'\n    }\n\n    function validateStep(step) {\n        let valid = false;\n\n        resetWarnings();\n\n        switch(step) {\n            case 1:\n                valid = true;\n                break;\n            case 2:\n                valid = validateStep2();\n                break;\n            case 3:\n                valid = true;\n                break;\n            default:\n                valid = true;\n        }\n\n        return valid;\n    }\n\n    function validateStep2() {\n        const nameEl = document.querySelector('.form__name');\n        const prefixEl = document.querySelector('.phone__prefix');\n        const numberEl = document.querySelector('.phone__number');\n        const chessEl = document.querySelector('.form__chess');\n        const dateEl = document.querySelector('.form__date');\n\n        const name = validateName(nameEl);\n        const prefix = validatePrefix(prefixEl);\n        const number = validatePhoneNumber(numberEl);\n        const chess = validateChess(chessEl);\n        const date = validateDate(dateEl);\n\n        return name && prefix && number && chess && date;\n    }\n\n    function validateName(el) {\n        if(el.value.length >= 3) return true;\n        showWarning(el, message.default);\n\n        return false;\n    }\n\n    function validatePrefix(el) {\n        if(el.value !== '') return true;\n        showWarning(el, message.prefix);\n\n        return false;\n    }\n\n    function validatePhoneNumber(el) {\n        if(el.value.length === 9) return true;\n        showWarning(el, message.default);\n\n        return false;\n    }\n\n    function validateChess(el) {\n        const radios = [...document.querySelectorAll('input[name=\"chess\"]')];\n        let isChecked = false;\n\n        radios.forEach(radio => {\n            if(radio.checked) isChecked = true;\n        });\n\n        if(isChecked) return true;\n        showWarning(el, message.chess);\n\n        return false;\n    }\n\n    function validateDate(el) {\n        const dayEl = el.querySelector('.date__day');\n        const monthEl = el.querySelector('.date__month');\n        const yearEl = el.querySelector('.date__year');\n\n        const day = validateDay(dayEl, monthEl.value, yearEl.value);\n        const month = validateMonth(monthEl);\n        const year = validateYear(yearEl);\n\n        return day && month && year;\n    }\n\n    function validateDay(el, month, year) {\n        const chosenMonth = month || new Date().getMonth();\n        const chosenYear = year || new Date().getFullYear();\n        const days = daysInMonth(chosenMonth, chosenYear);\n\n        if(el.value !== '' && el.value <= days) return true;\n\n        showWarning(el, message.default);\n\n        return false;\n    }\n\n    function validateMonth(el) {\n        if(el.value !== '') return true;\n        showWarning(el, message.month);\n\n        return false;\n    }\n\n    function validateYear(el) {\n        if(el.value !== '') return true;\n        showWarning(el, message.year);\n\n        return false;\n    }\n\n    function daysInMonth (month, year) {\n        const monthNumber = typeof month === 'string' ? formData.monthsNumbers[month] : month;\n        return new Date(year, monthNumber, 0).getDate();\n    }\n\n    function showWarning(el, message) {\n        const messageEl = document.createElement('span');\n\n        messageEl.classList.add('warning');\n        messageEl.textContent = message;\n        messageEl.style.left = `${calculateOffset(el)}px`;\n\n        el.insertAdjacentElement(\"afterend\", messageEl);\n    }\n\n    function resetWarnings() {\n        const warnings = [...document.querySelectorAll('.warning')];\n\n        warnings.forEach(warning => warning.remove());\n    }\n\n    function calculateOffset(el) {\n        const parent = el.closest('.form__row');\n        const elOffset = el.getBoundingClientRect()\n        const parentOffset = parent.getBoundingClientRect();\n\n        return Math.floor(elOffset.left - parentOffset.left);\n    }\n\n    return {\n        init: step => {\n            console.log('step', step)\n            return validateStep(step);\n        }\n    }\n})();","import steps from './steps';\nimport validation from './validation';\nimport formData from './formData';\n\n(function () {\n    const formButtonEl = document.querySelector('.form-button');\n    const formNavigationEl = document.querySelector('.form__navigation');\n    const stepElements = [...document.querySelectorAll('[data-step]')];\n    const numberOfSteps = stepElements.length;\n    let currentStep = 2;\n\n    populateSelects();\n    addEventListeners();\n\n    updateStep(currentStep, stepElements);\n\n    function populateSelects() {\n        const monthsEl = document.querySelector('.date__month');\n        const yearsEl = document.querySelector('.date__year');\n        const months = formData.months;\n        const years = formData.years;\n        const monthsFragment = createSelectFragment(months);\n        const yearsFragment = createSelectFragment(years);\n\n        monthsEl.appendChild(monthsFragment);\n        yearsEl.appendChild(yearsFragment);\n    }\n\n    function createSelectFragment(array) {\n        const selectFragment = document.createDocumentFragment();\n\n        array.forEach((value) => {\n            const optionEl = document.createElement('option');\n\n            optionEl.value = value;\n            // optionEl.value = typeof value === 'string' ? value.toLowerCase() : value;\n            optionEl.textContent = value;\n\n            selectFragment.appendChild(optionEl);\n        });\n\n        return selectFragment;\n    }\n\n    function addEventListeners() {\n        formButtonEl.addEventListener('click', handleFormButton);\n        formNavigationEl.addEventListener('click', handleNavigationClick);\n    }\n\n    function handleFormButton() {\n        if(!validation.init(currentStep)) return;\n\n        if(currentStep >= numberOfSteps) {\n            console.log('submit');\n        } else {\n            currentStep++;\n            updateStep(currentStep, stepElements);\n        }\n    }\n\n    function updateStep(currentStep, stepElements) {\n        steps.showStep(currentStep, stepElements);\n        steps.updateNavigation(currentStep, formNavigationEl);\n        updateButton();\n    }\n\n    function updateButton() {\n        formButtonEl.textContent = currentStep >= numberOfSteps ? 'Submit' : 'Continue';\n    }\n\n    function handleNavigationClick(e) {\n        const target = e.target;\n\n        if(!target.hasAttribute('data-target')) return;\n\n        setCurrentStep(parseInt(target.dataset.target));\n        updateStep(currentStep, stepElements);\n    }\n\n    function setCurrentStep(step) {\n        currentStep = step;\n    }\n})();"]}